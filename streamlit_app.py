
import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime
import os

st.set_page_config(page_title="BÃ¼tÃ§e YÃ¶netimi", layout="wide")
st.title("ğŸ“Š Firma BazlÄ± BÃ¼tÃ§e DaÄŸÄ±lÄ±m Sistemi")

uploaded_file = st.file_uploader("Excel gider dosyasÄ±nÄ± yÃ¼kle (.xlsx)", type=["xlsx"])

if uploaded_file:
    df = pd.read_excel(uploaded_file)
    st.success("Dosya yÃ¼klendi ve analiz ediliyor...")

    df["Gider BaÅŸlangÄ±Ã§"] = pd.to_datetime(df["Gider BaÅŸlangÄ±Ã§"])
    df["Gider BitiÅŸ Tarihi"] = pd.to_datetime(df["Gider BitiÅŸ Tarihi"])
    df["TARÄ°H"] = pd.to_datetime(df["TARÄ°H"])
    df = df[df["Gider BaÅŸlangÄ±Ã§"].astype(str).str.lower() != "ciroya dahil etme"]

    def aylara_dagit(row):
        tarih_araligi = pd.date_range(start=row["Gider BaÅŸlangÄ±Ã§"], end=row["Gider BitiÅŸ Tarihi"], freq="MS")
        tutar = row["ANA DÃ–VÄ°Z BORÃ‡"]
        esik = round(tutar / len(tarih_araligi), 2)
        return pd.DataFrame({
            "FÄ°RMA": row["FÄ°RMA"],
            "HESAP Ä°SMÄ°": row["HESAP Ä°SMÄ°"],
            "YIL": tarih_araligi.year,
            "AY": tarih_araligi.month,
            "TUTAR": esik
        })

    dagilim_df = pd.concat([aylara_dagit(row) for _, row in df.iterrows()], ignore_index=True)

    firma_sec = st.selectbox("Firma SeÃ§in", sorted(dagilim_df["FÄ°RMA"].unique()))
    yil_sec = st.selectbox("YÄ±l SeÃ§in", sorted(dagilim_df["YIL"].unique()))

    filtre = dagilim_df[(dagilim_df["FÄ°RMA"] == firma_sec) & (dagilim_df["YIL"] == yil_sec)]
    pivot = filtre.pivot_table(index="AY", values="TUTAR", aggfunc="sum").reindex(range(1,13), fill_value=0)

    st.subheader("ğŸ§¾ AylÄ±k Toplam Giderler")
    st.bar_chart(pivot)

    st.subheader("ğŸ“‚ Gider TÃ¼rÃ¼ DaÄŸÄ±lÄ±mÄ± (YÄ±llÄ±k)")
    gider_pasta = filtre.groupby("HESAP Ä°SMÄ°")["TUTAR"].sum().reset_index()
    fig = px.pie(gider_pasta, names="HESAP Ä°SMÄ°", values="TUTAR", title="Gider TÃ¼rÃ¼ DaÄŸÄ±lÄ±mÄ±")
    st.plotly_chart(fig, use_container_width=True)

    with st.expander("ğŸ“„ DaÄŸÄ±tÄ±lmÄ±ÅŸ Tablonun DetayÄ±"):
        st.dataframe(filtre)

    st.success("Veriler baÅŸarÄ±yla iÅŸlendi ve gÃ¶rselleÅŸtirildi.")
else:
    st.info("LÃ¼tfen bir Excel dosyasÄ± yÃ¼kleyin.")
